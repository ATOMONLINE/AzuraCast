name: Build, Test and Publish
on:
  pull_request:
    branches: 
      - master
  push:
    branches:
      - master
      - stable
  schedule:
    - cron: '0 2 * * 0' # Weekly on Sundays at 02:00

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Reduce Git repository size.
        run: |
          git gc --prune=now --aggressive
      - name: Build Base Docker Image
        run: |
          cp azuracast.sample.env azuracast.env
          cp docker-compose.sample.yml docker-compose.yml
          
          docker-compose pull web
          docker-compose build web
      - name: Pull latest translations
        uses: crowdin/github-action@1.0.6
        with:
          upload_translations: false
          download_translations: true
          export_only_approved: false
          push_translations: false
          config: /github/workspace/crowdin.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}
      - name: Build Docker Testing container
        run: |
      - name: Import translations into backend
        run: |
          docker-compose run --rm --user=azuracast web azuracast_cli locale:import
      - name: Import translations into frontend
        run: |
          docker-compose -f frontend/docker-compose.yml run --rm frontend npm run import-locales
          docker-compose -f frontend/docker-compose.yml run --rm frontend npm run build        
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Set up test environment
      run: |
        docker-compose build web
        
        chmod 777 tests/_output/
        docker-compose run --user="azuracast" --rm web azuracast_install
    - name: Run test suite
      run: |
        docker-compose run --user="azuracast" --rm web composer test
    - name: Echo test output directory
      if: failure()
      run: |
        cat tests/_output/*
  publish:
    needs: [test]
    if: github.event_name == 'push' || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Publish to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: azuracast/azuracast_web_v2
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_names: true 
          cache: ${{ github.event_name != 'schedule' }}
