<?php
/** @var \App\Customization $customization */
$locale_short = substr($customization->getLocale(), 0, 2);

$locale_info = [
    'locale' => $locale_short,
    'messages' => [
        $locale_short => [
            'play_btn'          => __('Play'),
            'pause_btn'         => __('Pause'),
            'mute_btn'          => __('Mute'),
            'volume_slider'     => __('Volume'),
            'full_volume_btn'   => __('Full Volume'),
            'album_art_alt'     => __('Album Art'),
        ],
    ],
];
?>

var i18n, radio_player;

$(function() {
    i18n = new VueI18n(<?=json_encode($locale_info) ?>);

    Vue.component('radio-player', {
        render: function(createElement) {
            return createElement(RadioPlayer.default, {
                props: {
                    show_album_art: <?=($customization->hideAlbumArt() ? 'false' : 'true') ?>,
                    now_playing_uri: '<?=$router->named('api:nowplaying:index', ['station' => $station->getId()]) ?>'
                }
            });
        }
    })

    var nowPlaying = new Vue({
        i18n,
        el: '#profile-nowplaying',
        data: {
            np: {
                listeners: {
                    total: 0,
                    unique: 0
                },
                live: {
                    is_live: false
                },
                now_playing: {
                    playlist: null
                }
            }
        },
        created: function() {
            Vue.prototype.$eventHub.$on('np_updated', function(np_new) {
                nowPlaying.np = np_new;
            });
        }
    });

    var service_status_lang = {
        "running": <?=$this->escapeJs(__('Running')) ?>,
        "not_running": <?=$this->escapeJs(__('Not Running')) ?>
    };

    var is_first_load = true;

    function checkServiceStatus() {
        $.ajax({
            cache: false,
            dataType: "json",
            url: '<?=$router->fromHere('api:stations:status') ?>',
            success: function(data) {
                var backend_status = $('#backend_status');
                backend_status.removeClass('badge-success badge-danger');

                if (data.backend_running) {
                    backend_status.addClass('badge-success').text(service_status_lang.running);
                } else {
                    backend_status.addClass('badge-danger').text(service_status_lang.not_running);
                }

                var frontend_status = $('#frontend_status');
                frontend_status.removeClass('badge-success badge-danger');

                if (data.frontend_running) {
                    frontend_status.addClass('badge-success').text(service_status_lang.running);
                } else {
                    frontend_status.addClass('badge-danger').text(service_status_lang.not_running);
                }

                if (is_first_load) {
                    setTimeout(checkServiceStatus, 5000);
                    is_first_load = false;
                } else {
                    setTimeout(checkServiceStatus, 15000);
                }
            }
        }).fail(function() {
            setTimeout(checkServiceStatus, 30000);
        });
    }

    checkServiceStatus();
});
